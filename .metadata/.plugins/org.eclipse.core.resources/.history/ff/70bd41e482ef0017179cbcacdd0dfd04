package com.pranayshetty;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;

public class Locations implements Map<Integer,Location>{

	private static Map<Integer,Location> locations=new HashMap<>();

	public static void main(String[] args)throws IOException {
		try(FileWriter locFile=new FileWriter("locations.txt");
			FileWriter dirFile=new FileWriter("directions.txt");	
			){
			for(Location location:locations.values()) {
				locFile.write(location.getLocationID()+","+location.getDescription()+"\n");
				for(String direction:location.getExits().keySet()) {
					dirFile.write(location.getLocationID()+","+direction+","+location.getExits().get(direction)+"\n");
				}
			
			}
		}
		
		
//		FileWriter locfile=null;
//		try { 
//			locfile=new FileWriter("locations.txt" );
//			for(Location location:locations.values()) {
//				locfile.write(location.getLocationID()+","+location.getDescription()+"\n");
//			}
//		}finally {
//			if(locfile!=null) {
//				locfile.close();
//			}
//		}

	}
	
	
	
	static {
		Scanner in=null;
		
//		Map<String, Integer> tempExit = new HashMap<String, Integer>();
//        locations.put(0, new Location(0, "You are sitting in front of a computer learning Java",null));
//
//        tempExit = new HashMap<String, Integer>();
//        tempExit.put("W", 2);
//        tempExit.put("E", 3);
//        tempExit.put("S", 4);
//        tempExit.put("N", 5);
//        locations.put(1, new Location(1, "You are standing at the end of a road before a small brick building",tempExit));
//
//        tempExit = new HashMap<String, Integer>();
//        tempExit.put("N", 5);
//        locations.put(2, new Location(2, "You are at the top of a hill",tempExit));
//
//        tempExit = new HashMap<String, Integer>();
//        tempExit.put("W", 1);
//        locations.put(3, new Location(3, "You are inside a building, a well house for a small spring",tempExit));
//
//        tempExit = new HashMap<String, Integer>();
//        tempExit.put("N", 1);
//        tempExit.put("W", 2);
//        locations.put(4, new Location(4, "You are in a valley beside a stream",tempExit));
//
//        tempExit = new HashMap<String, Integer>();
//        tempExit.put("S", 1);
//        tempExit.put("W", 2);
//        locations.put(5, new Location(5, "You are in the forest",tempExit));
	}
	
	
	@Override
	public void clear() {
		// TODO Auto-generated method stub
		locations.clear();
	}

	@Override
	public boolean containsKey(Object arg0) {
		// TODO Auto-generated method stub
		return locations.containsKey(arg0);
	}

	@Override
	public boolean containsValue(Object arg0) {
		// TODO Auto-generated method stub
		return locations.containsValue(arg0);
	}

	@Override
	public Set<Entry<Integer, Location>> entrySet() {
		// TODO Auto-generated method stub
		return locations.entrySet(); 
	}

	@Override
	public Location get(Object arg0) {
		// TODO Auto-generated method stub
		return locations.get(arg0);
	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return locations.isEmpty();
	}

	@Override
	public Set<Integer> keySet() {
		// TODO Auto-generated method stub
		
		return locations.keySet();
	}

	@Override
	public Location put(Integer arg0, Location arg1) {
		// TODO Auto-generated method stub
		return locations.put(arg0, arg1);
	}

	@Override
	public void putAll(Map<? extends Integer, ? extends Location> arg0) {
		// TODO Auto-generated method stub
		locations.putAll(arg0);
	}

	@Override
	public Location remove(Object arg0) {
		// TODO Auto-generated method stub
		return locations.remove(arg0);
	}

	@Override
	public int size() {
		// TODO Auto-generated method stub
		return locations.size();
	}

	@Override
	public Collection<Location> values() {
		// TODO Auto-generated method stub
		return locations.values();
	}
	
	

}
